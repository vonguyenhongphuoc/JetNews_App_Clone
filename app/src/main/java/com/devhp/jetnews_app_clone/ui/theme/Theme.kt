package com.devhp.jetnews_app_clone.ui.theme

import android.app.Activity
import android.os.Build
import androidx.compose.foundation.isSystemInDarkTheme
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.dynamicDarkColorScheme
import androidx.compose.material3.dynamicLightColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.runtime.Composable
import androidx.compose.runtime.SideEffect
import androidx.compose.ui.graphics.toArgb
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.platform.LocalView
import androidx.core.view.WindowCompat


val LightColors = lightColorScheme(
    primary = md_theme_light_primary,
    onPrimary = md_theme_light_onPrimary,
    primaryContainer = md_theme_light_primaryContainer,
    onPrimaryContainer = md_theme_light_onPrimaryContainer,
    inversePrimary = md_theme_light_inversePrimary,
    secondary = md_theme_light_secondary,
    onSecondary = md_theme_light_onSecondary,
    secondaryContainer = md_theme_light_secondaryContainer,
    onSecondaryContainer = md_theme_light_onSecondaryContainer,
    tertiary = md_theme_light_tertiary,
    onTertiary = md_theme_light_onTertiary,
    tertiaryContainer = md_theme_light_tertiaryContainer,
    onTertiaryContainer = md_theme_light_onTertiaryContainer,
    background = md_theme_light_background,
    onBackground = md_theme_light_onBackground,
    surface = md_theme_light_surface,
    onSurface = md_theme_light_onSurface,
    surfaceVariant = md_theme_light_surfaceVariant,
    onSurfaceVariant = md_theme_light_onSurfaceVariant,
    surfaceTint = md_theme_light_surfaceTint,
    inverseSurface = md_theme_light_inverseSurface,
    inverseOnSurface = md_theme_light_inverseOnSurface,
    error = md_theme_light_error,
    onError = md_theme_light_onError,
    errorContainer = md_theme_light_errorContainer,
    onErrorContainer = md_theme_light_onErrorContainer,
    outline = md_theme_light_outline,
    )

val DarkColors = darkColorScheme(
    primary = md_theme_dark_primary,
    onPrimary = md_theme_dark_onPrimary,
    primaryContainer = md_theme_dark_primaryContainer,
    onPrimaryContainer = md_theme_dark_onPrimaryContainer,
    inversePrimary = md_theme_dark_inversePrimary,
    secondary = md_theme_dark_secondary,
    onSecondary = md_theme_dark_onSecondary,
    secondaryContainer = md_theme_dark_secondaryContainer,
    onSecondaryContainer = md_theme_dark_onSecondaryContainer,
    tertiary = md_theme_dark_tertiary,
    onTertiary = md_theme_dark_onTertiary,
    tertiaryContainer = md_theme_dark_tertiaryContainer,
    onTertiaryContainer = md_theme_dark_onTertiaryContainer,
    background = md_theme_dark_background,
    onBackground = md_theme_dark_onBackground,
    surface = md_theme_dark_surface,
    onSurface = md_theme_dark_onSurface,
    surfaceVariant = md_theme_dark_surfaceVariant,
    onSurfaceVariant = md_theme_dark_onSurfaceVariant,
    surfaceTint = md_theme_light_surfaceTint,
    inverseSurface = md_theme_dark_inverseSurface,
    inverseOnSurface = md_theme_dark_inverseOnSurface,
    error = md_theme_dark_error,
    onError = md_theme_dark_onError,
    errorContainer = md_theme_dark_errorContainer,
    onErrorContainer = md_theme_dark_onErrorContainer,
    outline = md_theme_light_outline,
)

@Composable
fun JetNewsCloneTheme(
    darkTheme: Boolean = isSystemInDarkTheme(),
    dynamicColor: Boolean = false,
    content: @Composable () -> Unit
) {
    val colorScheme = if (dynamicColor && Build.VERSION.SDK_INT >= Build.VERSION_CODES.S) {
        val context = LocalContext.current
        if (darkTheme) dynamicDarkColorScheme(context) else dynamicLightColorScheme(context)
    } else {
        if (darkTheme) DarkColors else LightColors
    }

    val view = LocalView.current
    if (!view.isInEditMode) {
        SideEffect {
            val window = (view.context as Activity).window
            window.statusBarColor = colorScheme.primary.toArgb()
            WindowCompat.getInsetsController(window, view).isAppearanceLightStatusBars = darkTheme
        }
    }

    MaterialTheme(
        colorScheme = colorScheme,
        shapes = JetnewsShapes,
        typography = Typography,
        content = content
    )
}

/*H√†m `lightColorScheme` trong Jetpack Compose nh·∫≠n v√†o m·ªôt lo·∫°t c√°c m√†u s·∫Øc v√† tr·∫£ v·ªÅ m·ªôt `ColorScheme`. D∆∞·ªõi ƒë√¢y l√† gi·∫£i th√≠ch chi ti·∫øt v·ªÅ t·ª´ng m√†u:

1. `primary`: M√†u ch√≠nh c·ªßa ch·ªß ƒë·ªÅ, th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng cho c√°c th√†nh ph·∫ßn t∆∞∆°ng t√°c nh∆∞ n√∫t, li√™n k·∫øt, v.v.
2. `onPrimary`: M√†u ƒë∆∞·ª£c s·ª≠ d·ª•ng cho vƒÉn b·∫£n v√† bi·ªÉu t∆∞·ª£ng khi ch√∫ng xu·∫•t hi·ªán tr√™n m√†u ch√≠nh.
3. `primaryContainer`: M√†u c·ªßa c√°c container ch√≠nh.
4. `onPrimaryContainer`: M√†u c·ªßa vƒÉn b·∫£n ho·∫∑c bi·ªÉu t∆∞·ª£ng khi ch√∫ng xu·∫•t hi·ªán tr√™n `primaryContainer`.
5. `inversePrimary`: M√†u ng∆∞·ª£c l·∫°i v·ªõi m√†u ch√≠nh.
6. `secondary`: M√†u ph·ª•, th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ nh·∫•n m·∫°nh c√°c th√†nh ph·∫ßn t∆∞∆°ng t√°c kh√°c.
7. `onSecondary`: M√†u c·ªßa vƒÉn b·∫£n v√† bi·ªÉu t∆∞·ª£ng khi ch√∫ng xu·∫•t hi·ªán tr√™n m√†u ph·ª•.
8. `secondaryContainer`: M√†u c·ªßa c√°c container ph·ª•.
9. `onSecondaryContainer`: M√†u c·ªßa vƒÉn b·∫£n ho·∫∑c bi·ªÉu t∆∞·ª£ng khi ch√∫ng xu·∫•t hi·ªán tr√™n `secondaryContainer`.
10. `tertiary`: M√†u th·ª© ba, th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng cho c√°c th√†nh ph·∫ßn kh√¥ng quan tr·ªçng ho·∫∑c kh√¥ng c·∫ßn t·∫≠p trung.
11. `onTertiary`: M√†u c·ªßa vƒÉn b·∫£n v√† bi·ªÉu t∆∞·ª£ng khi ch√∫ng xu·∫•t hi·ªán tr√™n m√†u th·ª© ba.
12. `tertiaryContainer`: M√†u c·ªßa c√°c container th·ª© ba.
13. `onTertiaryContainer`: M√†u c·ªßa vƒÉn b·∫£n ho·∫∑c bi·ªÉu t∆∞·ª£ng khi ch√∫ng xu·∫•t hi·ªán tr√™n `tertiaryContainer`.
14. `background`: M√†u n·ªÅn c·ªßa giao di·ªán ng∆∞·ªùi d√πng.
15. `onBackground`: M√†u c·ªßa vƒÉn b·∫£n v√† bi·ªÉu t∆∞·ª£ng khi ch√∫ng xu·∫•t hi·ªán tr√™n n·ªÅn.
16. `surface`: M√†u c·ªßa c√°c b·ªÅ m·∫∑t ch√≠nh nh∆∞ card, sheet, v.v.
17. `onSurface`: M√†u c·ªßa vƒÉn b·∫£n v√† bi·ªÉu t∆∞·ª£ng khi ch√∫ng xu·∫•t hi·ªán tr√™n b·ªÅ m·∫∑t.
18. `surfaceVariant`: M·ªôt bi·∫øn th·ªÉ c·ªßa m√†u b·ªÅ m·∫∑t.
19. `onSurfaceVariant`: M√†u c·ªßa vƒÉn b·∫£n v√† bi·ªÉu t∆∞·ª£ng khi ch√∫ng xu·∫•t hi·ªán tr√™n `surfaceVariant`.
20. `surfaceTint`: M·ªôt m√†u nh·∫π h∆°n c·ªßa b·ªÅ m·∫∑t.
21. `inverseSurface`: M√†u ng∆∞·ª£c l·∫°i v·ªõi m√†u b·ªÅ m·∫∑t.
22. `inverseOnSurface`: M√†u c·ªßa vƒÉn b·∫£n v√† bi·ªÉu t∆∞·ª£ng khi ch√∫ng xu·∫•t hi·ªán tr√™n `inverseSurface`.
23. `error`: M√†u ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ ch·ªâ ra l·ªói ho·∫∑c tr·∫°ng th√°i l·ªói.
24. `onError`: M√†u c·ªßa vƒÉn b·∫£n v√† bi·ªÉu t∆∞·ª£ng khi ch√∫ng xu·∫•t hi·ªán tr√™n m√†u l·ªói.
25. `errorContainer`: M√†u c·ªßa c√°c container l·ªói.
26. `onErrorContainer`: M√†u c·ªßa vƒÉn b·∫£n ho·∫∑c bi·ªÉu t∆∞·ª£ng khi ch√∫ng xu·∫•t hi·ªán tr√™n `errorContainer`.
27. `outline`: M√†u c·ªßa ƒë∆∞·ªùng vi·ªÅn.
28. `outlineVariant`: M·ªôt bi·∫øn th·ªÉ c·ªßa m√†u ƒë∆∞·ªùng vi·ªÅn.
29. `scrim`: M√†u c·ªßa scrim, m·ªôt l·ªõp m·ªù th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng khi hi·ªÉn th·ªã c√°c dialog ho·∫∑c menu¬π.

Hy v·ªçng gi·∫£i th√≠ch c·ªßa t√¥i gi√∫p b·∫°n hi·ªÉu r√µ h∆°n v·ªÅ `lightColorScheme`! N·∫øu b·∫°n c√≥ th√™m c√¢u h·ªèi, ƒë·ª´ng ng·∫ßn ng·∫°i li√™n h·ªá v·ªõi t√¥i! üòä

Source: Conversation with Bing, 1/23/2024
(1) Material Design 3 in Compose | Jetpack Compose | Android Developers. https://developer.android.com/jetpack/compose/designsystems/material3.
(2) Theming in Compose with Material 3 | Android Developers. https://developer.android.com/codelabs/jetpack-compose-theming.
(3) change background color surface light/dark jetpack compose. https://stackoverflow.com/questions/74988479/change-background-color-surface-light-dark-jetpack-compose.
(4) Material3 theme in jetpack compose gives different color. https://stackoverflow.com/questions/76753884/material3-theme-in-jetpack-compose-gives-different-color.
(5) How do I use Color resource directly in Jetpack Compose?. https://stackoverflow.com/questions/64988112/how-do-i-use-color-resource-directly-in-jetpack-compose.H√†m `lightColorScheme` trong Jetpack Compose nh·∫≠n v√†o m·ªôt lo·∫°t c√°c m√†u s·∫Øc v√† tr·∫£ v·ªÅ m·ªôt `ColorScheme`. D∆∞·ªõi ƒë√¢y l√† gi·∫£i th√≠ch chi ti·∫øt v·ªÅ t·ª´ng m√†u:
*/